#naming convention:
#  function.FEATURE/argument.number, e.g.
#  tex.usedims.1

test <- texr:::test

m <- matrix(1:4, nrow = 2, ncol = 2)
reset_label_count()

# ***TESTS OF tex***

#test the simplest output
test("texmatrix.VALUE.1", tex(m), 
     c("\\begin{table}[ht]", "\\caption{Matrix: m}", 
       "\\label{tbl:1}", "\\centering", "\\begin{tabular}{rrr}", 
       " & 1 & 2 \\\\", "1 & 1 & 3 \\\\", 
       "2 & 2 & 4 \\\\", "\\end{tabular}", "\\end{table}"))
   
#test use.dims: accepts FALSE, "row", or "col"
test("tex.usedims.1", tex(m, options = list(use.dims = FALSE)),
     c("\\begin{table}[ht]", "\\caption{Matrix: m}", "\\label{tbl:2}", 
       "\\centering", "\\begin{tabular}{rr}", "1 & 3 \\\\", "2 & 4 \\\\", 
       "\\end{tabular}", "\\end{table}"))
test("tex.usedims.2", tex(m, options = list(use.dims = "row")),
     c("\\begin{table}[ht]", "\\caption{Matrix: m}", "\\label{tbl:3}", 
       "\\centering", "\\begin{tabular}{rrr}", 
       "1 & 1 & 3 \\\\", "2 & 2 & 4 \\\\", 
       "\\end{tabular}", "\\end{table}"))
test("tex.usedims.3", tex(m, options = list(use.dims = "col")),
     c("\\begin{table}[ht]", "\\caption{Matrix: m}", "\\label{tbl:4}", 
       "\\centering", "\\begin{tabular}{rr}", "1 & 2 \\\\", "1 & 3 \\\\", 
       "2 & 4 \\\\", "\\end{tabular}", "\\end{table}"))

#test align: check validity and functionality
test("tex.align.1", tex(m, options = list(align = "lcr")),
     c("\\begin{table}[ht]", "\\caption{Matrix: m}", "\\label{tbl:5}", 
       "\\centering", "\\begin{tabular}{lcr}",
       " & 1 & 2 \\\\", "1 & 1 & 3 \\\\", 
       "2 & 2 & 4 \\\\", "\\end{tabular}", "\\end{table}"))
test("tex.align.2", tex(m, options = list(align = "R&s")), error = "^Invalid")
test("tex.align.3", tex(m, options = list(align = "rrrr")), error = "^You specified")

#test label
test("tex.label.1", tex(m, options = list(label = "tbl:mat")), 
     c("\\begin{table}[ht]", "\\caption{Matrix: m}", "\\label{tbl:mat}", 
       "\\centering", "\\begin{tabular}{rrr}", 
       " & 1 & 2 \\\\", "1 & 1 & 3 \\\\", 
       "2 & 2 & 4 \\\\", "\\end{tabular}", "\\end{table}"))
       
#test digits: functionality and validity
m.num <- matrix(1:4 * pi)
test("tex.digits.1", tex(m.num, options = list(digits = 2L)),
     c("\\begin{table}[ht]", "\\caption{Matrix: m.num}", "\\label{tbl:9}", 
     "\\centering", "\\begin{tabular}{rr}", " & 1 \\\\", "1 & 3.14 \\\\", 
     "2 & 6.28 \\\\", "3 & 9.42 \\\\", "4 & 12.57 \\\\", "\\end{tabular}", 
     "\\end{table}"))
m.log <- matrix(TRUE, nrow = 2, ncol = 2)
test("tex.digits.2", tex(m.log, options = list(digits = 2L)), warning = "is not numeric")

#test caption
test("tex.caption.1", tex(m, options = list(caption = "Matrix Output")),
     c("\\begin{table}[ht]", "\\caption{Matrix Output}", "\\label{tbl:11}", 
       "\\centering", "\\begin{tabular}{rrr}",
       " & 1 & 2 \\\\", "1 & 1 & 3 \\\\", 
       "2 & 2 & 4 \\\\", "\\end{tabular}", "\\end{table}"))

#test hline.after: check validity and functionality
test("tex.hlineafter.1", tex(m, options = list(hline.after = 0:2)),
     c("\\begin{table}[ht]", "\\caption{Matrix: m}", "\\label{tbl:12}", 
       "\\centering", "\\begin{tabular}{rrr}", " & 1 & 2 \\\\", "\\hline", 
       "1 & 1 & 3 \\\\", "\\hline", "2 & 2 & 4 \\\\",
       "\\hline", "\\end{tabular}", "\\end{table}"))
test("tex.hlineafter.2", tex(m, options = list(hline.after = 6)), error = "^Row ")
test("tex.hlineafter.3", tex(m, options = list(hline.after = 5:6)), error = "^Rows ")
test("tex.hlineafter.4", tex(m, options = list(use.dims = FALSE, hline.after = -1)),
     error = "Please use.*col")

#test vline.after: check validity and functionality
test("tex.vlineafter.1", tex(m, options = list(vline.after = 0:2)), 
     c("\\begin{table}[ht]", "\\caption{Matrix: m}", "\\label{tbl:16}", 
       "\\centering", "\\begin{tabular}{r|r|r|}",
       " & 1 & 2 \\\\", "1 & 1 & 3 \\\\", 
       "2 & 2 & 4 \\\\", "\\end{tabular}", "\\end{table}"))
test("tex.vlineafter.2", tex(m, options = list(vline.after = 6)), error = "^Column ")
test("tex.vlineafter.3", tex(m, options = list(vline.after = 5:6)), error = "^Columns ")
test("tex.vlineafter.4", tex(m, options = list(use.dims = FALSE, vline.after = -1)),
     error = "Please use.*row")
     
#test na.char
m.na <- matrix(nrow = 2, ncol = 2)
test("tex.nachar.1", tex(m.na, options = list(na.char = "NA")),
     c("\\begin{table}[ht]", "\\caption{Matrix: m.na}", "\\label{tbl:20}", 
       "\\centering", "\\begin{tabular}{rrr}",
      " & 1 & 2 \\\\", "1 & NA & NA \\\\", 
      "2 & NA & NA \\\\", "\\end{tabular}", "\\end{table}"))

#test file
ff <- tempfile()
tex(m, options = list(file = ff))
test("tex.file.1", readLines(ff), 
     c("\\begin{table}[ht]", "\\caption{Matrix: m}", "\\label{tbl:21}", 
       "\\centering", "\\begin{tabular}{rrr}", 
       " & 1 & 2 \\\\", "1 & 1 & 3 \\\\", 
       "2 & 2 & 4 \\\\", "\\end{tabular}", "\\end{table}"))
       
#test placement: validity and functionality
test("tex.placement.1", tex(m, options = list(placement = "!htbp")),
     c("\\begin{table}[!htbp]", "\\caption{Matrix: m}", "\\label{tbl:22}", 
       "\\centering", "\\begin{tabular}{rrr}",
       " & 1 & 2 \\\\", "1 & 1 & 3 \\\\", 
       "2 & 2 & 4 \\\\", "\\end{tabular}", "\\end{table}"))
test("tex.placement.2", tex(m, options = list(placement = "xxxx")), 
     error = "^Invalid float")
     
#test validity of options
test("tex.options.1", tex(m, options = c(1, 2, 3)), error = "must be a named")
test("tex.options.2", tex(m, options = list(1, 2, 3)), error = "must be a named")
test("tex.options.3", tex(m, options = list(label = "lbl", 3)), error = "must be a named")
test("tex.options.4", tex(m, options = list(xxx = 4)), warning = "not recognized")

#test caption.placement: validity and functionality
test("tex.captionplacement.1", tex(m, options = list(caption.placement = "bottom")),
     c("\\begin{table}[ht]", "\\centering", "\\begin{tabular}{rrr}", 
       " & 1 & 2 \\\\", "1 & 1 & 3 \\\\",
       "2 & 2 & 4 \\\\", "\\end{tabular}", 
       "\\caption{Matrix: m}", "\\label{tbl:28}", "\\end{table}"))
test("tex.captionplacement.2", tex(m, options = list(caption.placement = "below")),
     c("\\begin{table}[ht]", "\\centering", "\\begin{tabular}{rrr}", 
       " & 1 & 2 \\\\", "1 & 1 & 3 \\\\",
       "2 & 2 & 4 \\\\", "\\end{tabular}", 
       "\\caption{Matrix: m}", "\\label{tbl:29}", "\\end{table}"))
test("tex.captionplacement.3", tex(m, options = list(caption.placement = "top")),
     c("\\begin{table}[ht]", "\\caption{Matrix: m}", "\\label{tbl:30}", 
       "\\centering", "\\begin{tabular}{rrr}", 
       " & 1 & 2 \\\\", "1 & 1 & 3 \\\\", 
       "2 & 2 & 4 \\\\", "\\end{tabular}", "\\end{table}"))
test("tex.captionplacement.4", tex(m, options = list(caption.placement = "xxx")),
     error = "Invalid.*caption\\.placement")
     
# ***TESTS OF reset_label_count, get_label_count***
     
test("resetlabelcount.VALUE.1", reset_label_count(), 0L)
test("resetlabelcount.VALUE.2", tex(m), 
     c("\\begin{table}[ht]", "\\caption{Matrix: m}", "\\label{tbl:1}", 
       "\\centering", "\\begin{tabular}{rrr}",
       " & 1 & 2 \\\\", "1 & 1 & 3 \\\\", 
       "2 & 2 & 4 \\\\", "\\end{tabular}", "\\end{table}"))
       
test("getlabelcount.VALUE.1", get_label_count(), 1L)
